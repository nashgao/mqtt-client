name: Claude Code Comprehensive Analysis

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday
  workflow_dispatch:
    inputs:
      analysis_type:
        description: 'Type of analysis to run'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - security
          - performance
          - refactoring
          - documentation

permissions:
  contents: write
  pull-requests: write
  issues: write
  security-events: write

jobs:
  claude-full-analysis:
    runs-on: ubuntu-latest
    name: Claude Complete Code Analysis
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup PHP environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: swoole, pcntl, posix
          tools: composer:v2
          
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
        
      - name: Claude Code Analysis
        id: claude-analysis
        uses: anthropics/claude-code-action@v1
        with:
          api-key: ${{ secrets.CLAUDE_API_KEY }}
          model: claude-3-opus-20240229
          analysis-config: |
            {
              "review": {
                "enabled": true,
                "focus_areas": ["security", "performance", "maintainability", "best_practices"]
              },
              "security": {
                "enabled": true,
                "scan_dependencies": true,
                "check_vulnerabilities": true
              },
              "performance": {
                "enabled": true,
                "check_algorithms": true,
                "memory_analysis": true
              },
              "code_quality": {
                "enabled": true,
                "check_complexity": true,
                "suggest_refactoring": true
              },
              "documentation": {
                "enabled": true,
                "check_coverage": true,
                "generate_missing": true
              }
            }
          output-format: markdown
          
      - name: Create Analysis Report
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = `# ðŸ¤– Claude Code Analysis Report
            
            **Date**: ${new Date().toISOString()}
            **Commit**: ${context.sha}
            **Branch**: ${context.ref}
            
            ${process.env.CLAUDE_ANALYSIS_REPORT}
            
            ---
            *Generated by [Claude Code Action](https://github.com/anthropics/claude-code-action)*
            `;
            
            fs.writeFileSync('claude-analysis-report.md', report);
            
      - name: Upload Analysis Report
        uses: actions/upload-artifact@v4
        with:
          name: claude-analysis-report
          path: claude-analysis-report.md
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const report = process.env.CLAUDE_ANALYSIS_SUMMARY;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ¤– Claude Code Analysis Summary\n\n${report}\n\n[View full report](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
            });
            
  claude-auto-fix:
    runs-on: ubuntu-latest
    name: Claude Auto-Fix Suggestions
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Claude Auto-Fix
        uses: anthropics/claude-code-action@v1
        with:
          api-key: ${{ secrets.CLAUDE_API_KEY }}
          model: claude-3-opus-20240229
          mode: auto-fix
          fix-types: |
            - code-style
            - simple-bugs
            - performance
            - security-patches
          commit-fixes: true
          
      - name: Push fixes
        if: steps.claude-fix.outputs.has-fixes == 'true'
        run: |
          git config --local user.email "claude-bot@anthropic.com"
          git config --local user.name "Claude Code Bot"
          git add -A
          git commit -m "fix: Claude Code automatic fixes
          
          Co-authored-by: Claude <noreply@anthropic.com>"
          git push
          
  claude-test-generation:
    runs-on: ubuntu-latest
    name: Claude Test Generation
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          
      - name: Claude Generate Tests
        uses: anthropics/claude-code-action@v1
        with:
          api-key: ${{ secrets.CLAUDE_API_KEY }}
          model: claude-3-opus-20240229
          mode: test-generation
          test-framework: phpunit
          coverage-threshold: 80
          focus-on-changes: true
          
      - name: Run Generated Tests
        run: |
          if [ -f "claude-generated-tests.php" ]; then
            vendor/bin/phpunit claude-generated-tests.php
          fi
          
  claude-documentation:
    runs-on: ubuntu-latest
    name: Claude Documentation Generation
    if: github.event.inputs.analysis_type == 'documentation' || github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Claude Generate Docs
        uses: anthropics/claude-code-action@v1
        with:
          api-key: ${{ secrets.CLAUDE_API_KEY }}
          model: claude-3-opus-20240229
          mode: documentation
          doc-types: |
            - api-reference
            - readme-updates
            - inline-comments
            - architecture-diagrams
          output-dir: docs/claude-generated
          
      - name: Create Documentation PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: Claude-generated documentation updates"
          title: "[Claude] Documentation updates"
          body: |
            ## ðŸ“š Claude Documentation Updates
            
            This PR contains automatically generated documentation from Claude Code analysis.
            
            ### Generated Documents:
            - API Reference updates
            - README improvements
            - Code comments
            - Architecture documentation
            
            Please review before merging.
          branch: claude-docs-${{ github.run_number }}